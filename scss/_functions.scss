@use 'sass:list';
@use 'sass:map';
@use 'sass:string';

@function replace($string, $search, $replace: '') {
  $index: string.index($string, $search);

  @if $index {
    @return string.slice($string, 1, $index - 1) + $replace + replace(string.slice($string, $index + string.length($search)), $search, $replace);
  }

  @return $string;
}

@function get-config($config, $value) {
  $val: null;

  @if($config == nil) {
    @warn 'Config variable is nil';
    @return nil;
  }

  @if (string.index($value, '.')) {
    $path: string.split($value, '.');
    $val: map.get($config, $path...);
  } @else {
    $val: map.get($config, $value);
  }

  @if ($val != null) {
    @return $val;
  } @else {
    @return nil;
  }
}

@function get-theme($theme, $value) {
  $val: null;

  @if($theme == nil) {
    @warn 'Theme variable is nil';
    @return nil;
  }

  @if (string.index($value, '.')) {
    $path: string.split($value, '.');
    $val: map.get($theme, $path...);
  } @else {
    $val: map.get($theme, $value);
  }

  @if ($val != null) {
    @return $val;
  } @else {
    @return nil;
  }

}

// See https://codepen.io/kevinweber/pen/dXWoRw
//
// Requires the use of quotes around data URIs.
@function escape-svg($string) {
  @if string.index($string, "data:image/svg+xml") {
    @each $char, $encoded in $escaped-characters {
      // Do not escape the url brackets
      @if string.index($string, "url(") == 1 {
        $string: url("#{string.replace(string.slice($string, 6, -3), $char, $encoded)}");
      } @else {
        $string: string.replace($string, $char, $encoded);
      }
    }
  }

  @return $string;
}

@function add_components($components) {
  $components_updated: ();
  @each $component in $components {
    $components_updated : list.append($components_updated, "components/" + $component);
  }
  @return $components_updated;
}
