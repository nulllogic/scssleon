/*
┌┐ ┌─┐┌─┐┌─┐
├┴┐├─┤└─┐├┤
└─┘┴ ┴└─┘└─┘
*/

@use "sass:string";
@use "sass:map";

/* Load settings and functions */
@use 'mixins' as mixins;
@use 'functions' as functions;

/* SCSS variables definition requirement */
$config: nil !default;
$theme: nil !default;

$color_scheme: functions.get-config($config, "color-scheme");

html {
  color-scheme: string.unquote($color_scheme);
}

html[data-theme="dark"] {
  color-scheme: dark
}

html[data-theme="light"] {
  color-scheme: light
}

@each $tag, $properties in functions.get-theme($theme, 'html') {

  @each $scheme in string.split(functions.get-config($config, "color-scheme"), " ") {

    @if $scheme == 'light' {
      #{$tag} {
        @include mixins.generate-properties(#{$tag}, $properties, $config);
      }
    }

    @if $scheme == 'dark' {
      [data-theme="#{$scheme}"] #{$tag} {
        @include mixins.generate-properties(#{$tag}, $properties, $config, map.deep-merge((
            only_dark_colors : true,
        ), $config));
      }
    }
  }

}