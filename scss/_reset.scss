/*
┬─┐┌─┐┌─┐┌─┐┌┬┐
├┬┘├┤ └─┐├┤  │
┴└─└─┘└─┘└─┘ ┴
*/

@use "sass:map";
@use "sass:meta";
@use "functions" as functions;
@use "mixins" as mixins;

$config: nil !default;
$theme: nil !default;

$prefix: functions.get-config($config, "prefix");

$is-reset-enabled: functions.get-config($config, "enable.reset");
$is-button-pointers-enabled: functions.get-config(
  $config,
  "enable.button-pointers"
);
$is-spacing-enabled: functions.get-config($config, "enable.spacing");

$color_scheme: functions.get-config($config, "color-scheme");

@if $is-reset-enabled {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  // Abbreviations
  // 1. "text-decoration" correct text decoration in Chrome, Edge, Opera, and Safari.
  // 2. "cursor" explicit cursor to indicate changed behavior.
  // 3. "text-decoration-skip-ink" prevent the text-decoration to be skipped.
  abbr[title] {
    text-decoration: underline dotted;
    cursor: help;
    text-decoration-skip-ink: none;
  }

  // Headings
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin: 0;
    line-height: normal;
  }

  // Paragraph
  p {
    margin: 0;
    line-height: normal;
  }

  // Lists
  ul,ol,
  ol ol,
  ul ul,
  ol ul,
  ul ol {
    margin: 0;
  }

  // Sub and Sup
  // Prevent `sub` and `sup` elements from affecting the line height in
  // all browsers.
  sub,
  sup {
    position: relative;
    line-height: 0;
    vertical-align: baseline;
  }

  // And undo these styles for placeholder links/named anchors (without href).
  // It would be more straightforward to just use a[href] in previous block, but that
  // causes specificity issues in many other styles that are too complex to fix.
  a:not([href]):not([class]) {
    &,
    &:hover {
      color: inherit;
      text-decoration: none;
    }
  }

  // Code
  pre,
  code,
  kbd,
  samp {
    font-size: 1em; // Correct the odd `em` font sizing in all browsers.
  }

  // 1. "margin" remove browser default top margin
  // 2. "overflow" don't allow content to break outside

  pre {
    display: block;
    margin: 0;
    overflow: auto;

    // Account for some code outputs that place code tags in pre tags
    code {
      font-size: inherit;
      color: inherit;
      word-break: normal;
    }
  }

  code {
    word-wrap: break-word;
    // Streamline the style when inside anchors to avoid broken underline and more
    a > & {
      color: inherit;
    }
  }

  kbd {
    padding: 0.1875rem 0.375rem;
    font-size: 0.875em;
    border-radius: 0.25rem;

    kbd {
      padding: 0;
      font-size: inherit;
    }
  }

  // Figures
  // Apply a consistent margin strategy (matches our type styles).
  figure {
    margin: 0;
  }

  // Images and content
  img,
  iframe,
  svg {
    // Adding `display` rule here, because if `display` is not specified, 2px will be added
    display: inline-block;
    vertical-align: middle;
  }

  // Tables
  // Prevent double borders
  table {
    caption-side: bottom;
    border-collapse: collapse;
  }

  caption {
    text-align: left;
  }

  // 1. "font-weight" removes font-weight bold by inheriting
  // 2. "text-align" matches default `<td>` alignment by inheriting `text-align`.
  // 3. "text-align" fix alignment for Safari
  th {
    font-weight: inherit; // 1
    text-align: inherit; // 2
    text-align: -webkit-match-parent; // 3
  }

  thead,
  tbody,
  tfoot,
  tr,
  td,
  th {
    border-color: inherit;
    border-style: solid;
    border-width: 0;
  }

  // Forms
  // Remove the default `border-radius` that macOS Chrome adds.
  button {
    border-radius: 0;
  }

  // Explicitly remove focus outline in Chromium when it shouldn't be
  // visible (e.g. as result of mouse click or touch tap). It already
  // should be doing this automatically, but seems to currently be
  // confused and applies its very visible two-tone outline anyway.
  button:focus:not(:focus-visible) {
    outline: 0;
  }

  // 1. "margin" remove the margin in Firefox and Safari
  input,
  button,
  select,
  optgroup,
  textarea {
    margin: 0;
    line-height: inherit;
  }

  // Remove the inheritance of text transform in Firefox
  button,
  select {
    text-transform: none;
  }
  // Set the cursor for non-`<button>` buttons
  [role="button"] {
    cursor: pointer;
  }

  select {
    // Remove the inheritance of word-wrap in Safari.
    word-wrap: normal;

    // Undo the opacity change from Chrome
    &:disabled {
      opacity: 1;
    }
  }

  // Remove the dropdown arrow only from text type inputs built with datalists in Chrome.
  // See https://stackoverflow.com/a/54997118
  [list]:not([type="date"]):not([type="datetime-local"]):not(
      [type="month"]
    ):not([type="week"]):not([type="time"])::-webkit-calendar-picker-indicator {
    display: none !important;
  }

  // 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
  //    controls in Android 4.
  // 2. Correct the inability to style clickable types in iOS and Safari.

  button,
  [type="button"], // 1
  [type="reset"],
  [type="submit"] {
    -webkit-appearance: button; // 2
  }

  // Remove inner border and padding from Firefox, but don't restore the outline like Normalize.
  ::-moz-focus-inner {
    padding: 0;
    border-style: none;
  }

  // 1. "resize" textareas should really only resize vertically so they don't break their (horizontal) containers.
  textarea {
    resize: vertical;
  }

  // 1. "min-width" browsers set a default `min-width: min-content;` on fieldsets,
  //    unlike e.g. `<div>`s, which have `min-width: 0;` by default.
  //    So we reset that to ensure fieldsets behave more like a standard block element.
  //    See https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements
  // 2. "border" reset the default outline behavior of fieldsets so they don't affect page layout.

  fieldset {
    min-width: 0;
    padding: 0;
    margin: 0;
    border: 0;
  }

  // 1. By using `float: left`, the legend will behave like a block element.
  //    This way the border of a fieldset wraps around the legend if present.
  // 2. "clear" fix wrapping bug.
  legend {
    float: left;
    width: 100%;
    padding: 0;
    margin: 0;
    line-height: inherit;

    + * {
      clear: left; // 2
    }
  }

  // Fix height of inputs with a type of datetime-local, date, month, week, or time
  ::-webkit-datetime-edit-fields-wrapper,
  ::-webkit-datetime-edit-text,
  ::-webkit-datetime-edit-minute,
  ::-webkit-datetime-edit-hour-field,
  ::-webkit-datetime-edit-day-field,
  ::-webkit-datetime-edit-month-field,
  ::-webkit-datetime-edit-year-field {
    padding: 0;
  }

  ::-webkit-inner-spin-button {
    height: auto;
  }

  // 1. Correct the outline style in Safari.
  // 2. This overrides the extra rounded corners on search inputs in iOS
  [type="search"] {
    outline-offset: -2px; // 1
    -webkit-appearance: textfield; // 2
  }

  // 1. A few input types should stay LTR
  // See https://rtlstyling.com/posts/rtl-styling#form-inputs
  // 2. RTL only output
  // See https://rtlcss.com/learn/usage-guide/control-directives/#raw

  /* rtl:raw:
  [type="tel"],
  [type="url"],
  [type="email"],
  [type="number"] {
    direction: ltr;
  }
  */

  // Remove the inner padding in Chrome and Safari on macOS.
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  // Remove padding around color pickers in webkit browsers
  ::-webkit-color-swatch-wrapper {
    padding: 0;
  }

  // 1. Inherit font family and line height for file input buttons
  // 2. Correct the inability to style clickable types in iOS and Safari.
  ::file-selector-button {
    font: inherit; // 1
    -webkit-appearance: button; // 2
  }

  // Correct element displays
  output {
    display: inline-block;
  }

  // Remove border from iframe
  iframe {
    border: 0;
  }

  // Summary
  // 1. "display" add the correct display in all browsers
  summary {
    display: list-item;
    cursor: pointer;
  }

  // Progress
  progress {
    vertical-align: baseline;
  }

  // Definition list
  dl {
    dd {
      margin: 0;
    }

    dt {
      margin: 0;
    }
  }

  // Blockquote
  blockquote {
    margin: 0;
  }

  // Hidden attribute
  [hidden] {
    display: none !important;
  }
}
